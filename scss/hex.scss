$hexagonWidth: 200px;
$hexMargin: 10px;
$sqrt3: 1.73205080757;

* {
    margin: 0;
}

.hexagon {
    width: $hexagonWidth;
    height: $hexagonWidth / $sqrt3;
    margin-bottom: ($hexagonWidth / (2 * $sqrt3) - 2 + $sqrt3 * $hexMargin);
    margin-left: $hexMargin;
    margin-right: $hexMargin;
    position: relative;

    background-color: black;

    background-size: auto (2 * $hexagonWidth / $sqrt3);
    background-position: center center;
}

@mixin hexagon-before-after($rotation) {
    position: absolute;
    background: inherit;
    overflow: hidden;
    width: inherit;
    height: inherit;
    transform: rotate($rotation);

    &:before {
        display: block;
        content: "";
        background: inherit;

        width: $hexagonWidth;
        height: 2 * $hexagonWidth / $sqrt3;
    }
}

.hexagon-before {
    @include hexagon-before-after(60deg);
}

.hexagon-after {
    @include hexagon-before-after(120deg);
}

.hexagon-before:before {
    transform: rotate(-60deg)
               translate($hexagonWidth / 4,
                            - $hexagonWidth * (1 / $sqrt3 - $sqrt3 / 4));
}

.hexagon-after:before {
    transform: rotate(-120deg)
               translate($hexagonWidth / 4,
                            $hexagonWidth * (1 / $sqrt3 - $sqrt3 / 4));
}

.hexGrid {
    box-sizing: border-box;
    margin: auto;
    padding-top: $hexagonWidth / (2 * $sqrt3);
    padding-bottom: 40px;
    overflow: auto;

    .hexagon {
        float: left;
    }
}

.newShortRow {
    margin-left: 2 * $hexMargin + $hexagonWidth / 2;
}

.newLongRow {
    clear: left;
}
